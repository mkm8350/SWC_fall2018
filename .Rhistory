setwd("~/Desktop/SWC_fall2018")
fahr_to_Kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5/9)) + 273.15
kelvin
}
fahr_to_Kelvin(32)
print("Boiling point of water: ", fahr_to_Kelvin(212))
print('Boiling point of water: ', fahr_to_Kelvin(212))
print(paste('Boiling point of water: ', fahr_to_Kelvin(212)))
kelvin_to_celsius <- function(temp) {
celsius <- temp - 273.15
celsius
}
print(paste("Absolute zero in celsius: ", kelvin_to_celsius(0)))
fahr_to_celsius <- function(temp) {
temp_k <- fahr_to_celsius(temp)
result <- kelvin_to_celsius(temp_k)
result
}
print(paste("Freezing point of water: ", fahr_to_celsius(32)))
fahr_to_celsius <- function(temp) {
temp_k <- fahr_to_Kelvin(temp)
result <- kelvin_to_celsius(temp_k)
result
}
print(paste("Freezing point of water: ", fahr_to_celsius(32)))
fence <- function(name, wrap) {
result <- toString(wrap, name, wrap)
result
}
fence(Murtaza, student)
fence("Murtaza", "student")
result <- paste(wrap, name, wrap)
fence <- function(name, wrap) {
result <- paste(wrap, name, wrap)
result
}
fence(Murtaza, student)
fence <- function(name, wrap) {
print(paste(wrap, name, wrap))
}
fence("Murtaza", "student")
fence <- function(name, wrap) {
print(paste(wrapnamewrap))
}
fence("Murtaza", "student")
fence <- function(name, wrap) {
print(paste(wrap, name, wrap))
}
fence("Murtaza", "student")
fence(Murtaza, student)
fence("Murtaza", "student")
result <- paste(wrap, name, wrap)
fence <- function(name, wrap) {
result <- paste(wrap, name, wrap)
}
fence(Murtaza, student)
fence("Murtaza", "student")
fence <- function(name, wrap) {
result <- paste(wrap, name, wrap)
}
fence <- function(name, wrap) {
result <- paste(wrap, name, wrap)
result
}
fence("Murtaza", "student")
fence <- function(name, wrap) {
result <- paste(wrap, name, wrap)
return(result)
}
fence("Murtaza", "student")
fence <- function(name, wrap) {
result <- paste0(wrap, name, wrap)
return(result)
}
fence("Murtaza", "student")
pwd
#Script in R
setwd("~/Desktop/SWC_fall2018")
#location of data
filename <- 'Data/gapminder.txt'
#read data
gapminder <- read.table(filename, header = TRUE)
View(gapminder)
#select rows where the country is Albania
albaniaData <- gapminder[gapminder$country=="Albania",]
albaniaData
View(albaniaData)
#select columns for gdpPercap from albamiaData
albaniaGDP <- albaniaData[,albaniaData$gdpPercap]
#select columns for gdpPercap from albamiaData
albaniaGDP <- albaniaData$gdpPercap
#Avg albaniaGDP
albaniaAvgGDP <- mean(albaniaGDP)
print(paste("The average GDP of Albania is ", albaniaAvgGDP))
print(paste("The average GDP of Albania is", albaniaAvgGDP))
#clear old variables
rm(list = ls())
#location of data
filename <- 'Data/gapminder.txt'
#read data
gapminder <- read.table(filename, header = TRUE)
View(gapminder)
getAvgGDP <- function(country, gapminder) {
selectecCountryData <- gapminder[gapminder$country==country,]
avgGDP <- mean(selectecCountryData$gdpPercap)
}
getAvgGDP <- function(country, gapminder) {
selectecCountryData <- gapminder[gapminder$country==country,]
mean(selectecCountryData$gdpPercap)
}
getAvgGDP <- function(country, gapminder) {
selectecCountryData <- gapminder[gapminder$country==country,gapminder$gdpPercap]
mean(selectecCountryData)
}
gdpUSA <- getAvgGDP("United States", gapminder)
gdpUSA <- getAvgGDP("United_States", gapminder)
selectecCountryData <- gapminder[gapminder$country==country,]
selectecCountryData <- gapminder[gapminder$country==country,"gdpPercap"]
gdpUSA <- getAvgGDP("United_States", gapminder)
getAvgGDP <- function(country,gapminder) {
selectedCountryData <- gapminder[gapminder$country == country,"gdpPercap"]
mean(selectedCountryData)
}
gdpUSA <- getAvgGDP("United_States", gapminder)
gdpCanada <- getAverageGdpPerCapita("Canada", gapminder)
gdpMexico <- getAverageGdpPerCapita("Mexico", gapminder)
gdpCanada <- getAvgGDP("Canada", gapminder)
gdpMexico <- getAvgGDP("Mexico", gapminder)
setwd(dir = '~/Desktop/SWC_fall2018')
gapminder <- read.table(file = "Data/gapminder.txt")
setwd(dir = '~/Desktop/SWC_fall2018')
gapminder <- read.table(file = "Data/gapminder.txt")
install.packages("ggplot2")
library(ggplot2)
gapminder <- read.table(file = "Data/gapminder.txt")
gapminder <- read.table(file = "Data/gapminder.txt", header = TRUE)
View(gapminder)
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp))
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = lifeExp, y = year)) + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp)) + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, color = continent)) + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, color = continent)) + geom_line()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = country)) + geom_line()
continent
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line() + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line() + geom_point(shape = square)
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line() + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line(aes(color = continent)) + geom_point()
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line(aes(color = continent)) + geom_point(aes(shape = square))
#challenge 1
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_line(aes()) + geom_point()
#challenge 2
ggplot(data = gapminder, aes(x = year, y = lifeExp, by = country, color = continent)) + geom_point() + geom_line()
#stats
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point()
scale_x_log10()
#stats
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(alpha = 0.5)+ scale_x_log10()
#stats
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point() + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(aes(color = blues9, size = 2)) + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(color = blues9, size = 2) + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, color = red) + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, color = "red") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 0.5, color = "red") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 0.5, color = continent) + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 0.5) + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 0.5, shape = "square") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, shape = "square") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, shape = "trapizoid") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, shape = "oval") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, shape = "star") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
#cchallenge 3
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp, color = continent)) + geom_point(size = 5, shape = "diamond") + scale_x_log10() + geom_smooth(method = "lm", size = 1.5)
starts.with <- substr(x = gapminder$continent, start = 1, stop = 1)
az.countries <- gapminder[starts.with %n% c("A", "Z"),]
az.countries <- gapminder[starts.with %in% c("A", "Z"),]
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap( ~ country )
starts.with <- substr(x = gapminder$country, start = 1, stop = 1)
az.countries <- gapminder[starts.with %in% c("A", "Z"),]
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap( ~ country )
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() +
facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x-element_blank(), axis.ticks.x, element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() +
facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() +
facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() +
facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x = element_blank(), axis.ticks.x = element_blank())
-
-
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() +
facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.test.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.text.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.text.x-element_blank(), axis.ticks.x = element_blank())
ggplot(data = az.countries, aes(x = year, y = lifeExp, color = continent)) + geom_line() + facet_wrap(~country) +
labs(x = "Year", y = "Life Expectancy", title = "Figure 1", color = "Continent") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
#challenge 4
ggplot(data = gapminder, aes(x = year, y = gdpPercap, color = continent)) + geom_density()
#challenge 4
ggplot(data = gapminder, aes(x = year, color = continent)) + geom_density()
#challenge 4
ggplot(data = gapminder, aes(x = year, color = continent)) + geom_density(aes(fill = continent))
#challenge 4
ggplot(data = gapminder, aes(x = year)) + geom_density(aes(fill = continent))
#challenge 4
ggplot(data = gapminder, aes(x = year)) + geom_density(aes(fill = continent)) + facet_wrap(~continent)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent)) + facet_wrap(~continent)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent))
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent)) + xlim(0, 65000)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent))
+ xlim(0, 65000)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent)) + xlim(0, 65000)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(aes(fill = continent))
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(alpha = 0.6, aes(fill = continent))
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(alpha = 0.6, aes(fill = continent)) +
facet_wrap(~year)
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(alpha = 0.6, aes(fill = continent)) +
facet_wrap(~continent) + scale_x_log10()
#challenge 4
ggplot(data = gapminder, aes(x = gdpPercap)) + geom_density(alpha = 0.6, aes(fill = continent)) + scale_x_log10()
knitr::opts_chunk$set(echo = TRUE)
```{r pressure, echo=TRUE}
setwd(~/Desktop/SWC_fall2018)
setwd(Desktop/SWC_fall2018)
